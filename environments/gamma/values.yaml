# ################### GLOBAL ###################

global:
  environmentName: gamma
  gcp:
    projectId: hnt-live-gamma # TODO: make sure we don't reuse this on other environments
    gke:
      clusterLocation: us-east4
      clusterName: main-cluster-gamma # TODO: always update
  chains:
    river:
      chainId: "6524490" # TODO: always update
      contractAddresses:
        riverRegistry: "0xf18E98D36A6bd1aDb52F776aCc191E69B491c070" # TODO: always update this accross environments

appOfApps:
  default:
    valuesFile: ../../environments/gamma/values.yaml # TODO: always update
    spec:
      project: default
      source:
        repoURL: https://github.com/HereNotThere/kerem-argocd-test
        targetRevision: main

  applications:
    - name: external-secrets
      disable: true
      namespace: external-secrets
      values: |
        external-secrets:
          serviceAccount:
            create: true
            name: main-service-account
            annotations:
              iam.gke.io/gcp-service-account: main-service-account@hnt-live-gamma.iam.gserviceaccount.com # TODO: make sure you replace the project ID with the correct one. turn this into a tpl
    - name: cert-manager
      disable: true
      namespace: cert-manager
      values: |
        cert-manager:
          crds:
            enabled: true

    # - name: argocd
    #   disable: true
    #   namespace: argocd
    - name: datadog
      disable: true
      namespace: datadog
    - name: metrics-aggregator
      disable: true
      namespace: default
    - name: notification-service
      disable: true
      namespace: default
      values: |
        apnsTownsAppIdentifier: com.towns.internal # TODO: make sure you update this on other environments
        image:
          tag: dev # TODO: always update
        # ingress:
        #   hosts:
        #     - host: river-notification-service-gamma.towns.com #TODO: always update
        #       paths:
        #         - path: /
        #           pathType: Prefix

# TODO: should we set up a solo ingress that routes to the correct service in the correct app?

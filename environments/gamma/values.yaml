# ################### GLOBAL ###################

global:
  environmentName: gamma
  gcp:
    projectId: hnt-live-shared # TODO: make sure we don't reuse this on other environments
    gke:
      clusterLocation: us-east4
      clusterName: main-standard-global # TODO: consider templatizing this one

appOfApps:
  default:
    spec:
      project: default
      source:
        repoURL: https://github.com/HereNotThere/kerem-argocd-test
        targetRevision: main
        helm:
          valueFiles:
            - ../../environments/gamma/values.yaml

  applications:
    - name: external-secrets
      disable: false
      namespace: external-secrets
    # - name: argocd-umbrella
    #   disable: true
    #   namespace: argocd
    # - name: datadog-umbrella
    #   disable: true
    #   namespace: default
    - name: metrics-aggregator
      disable: false
      namespace: default
# metrics-aggregator:
#   riverRpcUrl:
#     value: "https://testnet.rpc.river.build/http" # TODO: turn this into a secret
# ################### DATADOG ###################

external-secrets:
  serviceAccount:
    create: true
    name: main-service-account
    annotations:
      iam.gke.io/gcp-service-account: main-service-account@hnt-live-shared.iam.gserviceaccount.com # TODO: make sure you replace the project ID with the correct one. turn this into a tpl
# datadog:
#   datadog:
#     apiKeyExistingSecret: datadog-secret
#     appKeyExistingSecret: datadog-secret
#     prometheusScrape:
#       enabled: true

#   agents:
#     containers:
#       agent:
#         # resources for the Agent container
#         resources:
#           requests:
#             cpu: 200m
#             memory: 256Mi

#       traceAgent:
#         # resources for the Trace Agent container
#         resources:
#           requests:
#             cpu: 100m
#             memory: 200Mi

#       processAgent:
#         # resources for the Process Agent container
#         resources:
#           requests:
#             cpu: 100m
#             memory: 200Mi

#     priorityClassCreate: true

#   clusterAgent:
#     enabled: true
#     metricsProvider:
#       enabled: true

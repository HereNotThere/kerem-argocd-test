apiVersion: external-secrets.io/v1beta1
kind: ClusterSecretStore
metadata:
  name: gcp-secret-store
  namespace: {{ .Release.Namespace }}
spec:
  provider:
    gcpsm:
      projectID: {{ .Values.global.gcp.projectId }}
      auth:
        workloadIdentity: 
          clusterLocation: {{ .Values.global.gcp.gke.clusterLocation }}
          clusterName: {{ .Values.global.gcp.gke.clusterName }}
          clusterProjectID: {{ .Values.global.gcp.projectId }}
          serviceAccountRef:
            name: external-secrets 
            namespace: {{ .Release.Namespace }}


---

apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: my-secret
  namespace: {{ .Release.Namespace }}
spec:
  refreshInterval: "1h"
  secretStoreRef:
    name: gcp-secret-store
    kind: ClusterSecretStore
  target:
    name: synced-secret
    creationPolicy: Owner
    deletionPolicy: Retain
  data:
  - secretKey: key
    remoteRef:
      # TODO: use project id from global
      key: example-secret
      version: latest